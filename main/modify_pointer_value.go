package main

import "fmt"

// 交换函数  &取出地址，*根据地址取出地址指向的值。
func swap(a, b *int) {
	// 取a指针的值, 赋给临时变量t
	t := *a
	// 取b指针的值, 赋给a指针指向的变量
	*a = *b
	// 将a指针的值赋给b指针指向的变量
	*b = t

	fmt.Printf("t的地址%p \n", &t)

}

//使用指针修改值   这里修改的是地址的值不是地址
//通过指针不仅可以取值，也可以修改值。
func main() {
	// 准备两个变量, 赋值1和2
	x, y := 1, 2
	ptrx := &x
	ptry := &y
	fmt.Printf("x的地址%p y的地址 %p \n", ptrx, ptry)
	// 交换变量值
	swap(ptrx, ptry)
	// 输出变量值
	fmt.Printf("交换后x的值%d,y的值%d \n", x, y)

	fmt.Printf("x的地址%p y的地址 %p \n", ptrx, ptry)

	//总结地址没变 地址指向的值变了

	//*操作符作为右值时，意义是取指针的值；
	//作为左值时，也就是放在赋值操作符的左边时， 表示 a 指向的变量。地址对应的那个值 也就是对应的那个变量
	//其实归纳起来，*操作符的根本意义就是操作指针指向的变量。
	//当操作在右值时，就是取指向变量的值；当操作在左值时，就是将值设置给指向的变量。
}
